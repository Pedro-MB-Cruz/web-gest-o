// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Roles {
  ADMIN
  TECHNICIAN
  USER
}

enum AccountStatus {
  ACTIVE
  INACTIVE
}

model User {
  id         Int           @id @default(autoincrement())
  username   String        @unique
  password   String
  role       Roles         @default(USER)
  status     AccountStatus @default(ACTIVE)
  created_at DateTime      @default(now())
  updated_at DateTime      @default(now()) @updatedAt
  network    Network[]

  @@map("users")
}

model Network {
  id         Int    @id @default(autoincrement())
  name       String
  ipEntrance String
  gateway    String
  user_id    Int

  SubNetworks SubNetwork[]
  User        User         @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("networks")
}

model SubNetwork {
  id      Int    @id @default(autoincrement())
  name    String
  subnet  String
  mask    String
  gateway String
  dns     String

  network_id Int

  Network Network  @relation(fields: [network_id], references: [id], onDelete: Cascade)
  Device  Device[]

  @@map("subnetworks")
}

model Device {
  id            Int    @id @default(autoincrement())
  name          String
  ports         Int?
  location      String
  ip            String
  mac           String
  description   String
  subnetwork_id Int

  SubNetwork SubNetwork @relation(fields: [subnetwork_id], references: [id], onDelete: Cascade)

  @@map("devices")
}
